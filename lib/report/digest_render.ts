import { DailyDigest } from './digest_schema';

export function renderDigest(d: DailyDigest): string {
  const discussions = (d.discussions || [])
    .map((t, i) => {
      const parts = [
        `${i + 1}. ${t.topic}`,
        `–í–æ–ø—Ä–æ—Å: ${t.question}`,
        `–£—á–∞—Å—Ç–Ω–∏–∫–∏: ${(t.participants || []).join(', ')}`,
        `–ò—Ç–æ–≥: ${t.outcome}`,
      ];
      return parts.join('\n');
    })
    .join('\n\n');

  const insights = (d.insights || []).map((i) => `‚Äì ${i}`).join('\n');

  const total = (d as any).stats?.messages_count ?? 0;
  const participants = (d as any).stats?.participants_count ?? 0;

  // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ–¥–Ω–æ–≥–æ Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è
  return [
    `üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç`,
    '',
    'üí¨ –ö–ª—é—á–µ–≤—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è',
    discussions,
    '',
    ...(insights ? ['üí° –ò–Ω—Å–∞–π—Ç—ã', insights, ''] : []),
    'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
    `–°–æ–æ–±—â–µ–Ω–∏–π: ${total}`,
    `–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${participants}`,
  ].join('\n');
}


